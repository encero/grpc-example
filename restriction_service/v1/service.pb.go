// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.2
// source: restriction_service/v1/service.proto

package restriction_service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type IsRestrictedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *IsRestrictedRequest) Reset() {
	*x = IsRestrictedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restriction_service_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsRestrictedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsRestrictedRequest) ProtoMessage() {}

func (x *IsRestrictedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_restriction_service_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsRestrictedRequest.ProtoReflect.Descriptor instead.
func (*IsRestrictedRequest) Descriptor() ([]byte, []int) {
	return file_restriction_service_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *IsRestrictedRequest) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

type IsRestrictedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRestricted map[int64]bool `protobuf:"bytes,1,rep,name=is_restricted,json=isRestricted,proto3" json:"is_restricted,omitempty" protobuf_key:"zigzag64,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *IsRestrictedResponse) Reset() {
	*x = IsRestrictedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restriction_service_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsRestrictedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsRestrictedResponse) ProtoMessage() {}

func (x *IsRestrictedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_restriction_service_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsRestrictedResponse.ProtoReflect.Descriptor instead.
func (*IsRestrictedResponse) Descriptor() ([]byte, []int) {
	return file_restriction_service_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *IsRestrictedResponse) GetIsRestricted() map[int64]bool {
	if x != nil {
		return x.IsRestricted
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Brand    string `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
	Category string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_restriction_service_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_restriction_service_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_restriction_service_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *Product) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Product) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Product) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

var File_restriction_service_v1_service_proto protoreflect.FileDescriptor

var file_restriction_service_v1_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x52,
	0x0a, 0x13, 0x49, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x49, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0d, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x49, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64,
	0x1a, 0x3f, 0x0a, 0x11, 0x49, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x4b, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x32, 0x81,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6b, 0x0a, 0x0c, 0x49, 0x73, 0x52, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x73, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x6e, 0x63, 0x65, 0x72, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_restriction_service_v1_service_proto_rawDescOnce sync.Once
	file_restriction_service_v1_service_proto_rawDescData = file_restriction_service_v1_service_proto_rawDesc
)

func file_restriction_service_v1_service_proto_rawDescGZIP() []byte {
	file_restriction_service_v1_service_proto_rawDescOnce.Do(func() {
		file_restriction_service_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_restriction_service_v1_service_proto_rawDescData)
	})
	return file_restriction_service_v1_service_proto_rawDescData
}

var file_restriction_service_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_restriction_service_v1_service_proto_goTypes = []interface{}{
	(*IsRestrictedRequest)(nil),  // 0: restriction_service.v1.IsRestrictedRequest
	(*IsRestrictedResponse)(nil), // 1: restriction_service.v1.IsRestrictedResponse
	(*Product)(nil),              // 2: restriction_service.v1.Product
	nil,                          // 3: restriction_service.v1.IsRestrictedResponse.IsRestrictedEntry
}
var file_restriction_service_v1_service_proto_depIdxs = []int32{
	2, // 0: restriction_service.v1.IsRestrictedRequest.products:type_name -> restriction_service.v1.Product
	3, // 1: restriction_service.v1.IsRestrictedResponse.is_restricted:type_name -> restriction_service.v1.IsRestrictedResponse.IsRestrictedEntry
	0, // 2: restriction_service.v1.RestrictionService.IsRestricted:input_type -> restriction_service.v1.IsRestrictedRequest
	1, // 3: restriction_service.v1.RestrictionService.IsRestricted:output_type -> restriction_service.v1.IsRestrictedResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_restriction_service_v1_service_proto_init() }
func file_restriction_service_v1_service_proto_init() {
	if File_restriction_service_v1_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_restriction_service_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsRestrictedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restriction_service_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsRestrictedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_restriction_service_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_restriction_service_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_restriction_service_v1_service_proto_goTypes,
		DependencyIndexes: file_restriction_service_v1_service_proto_depIdxs,
		MessageInfos:      file_restriction_service_v1_service_proto_msgTypes,
	}.Build()
	File_restriction_service_v1_service_proto = out.File
	file_restriction_service_v1_service_proto_rawDesc = nil
	file_restriction_service_v1_service_proto_goTypes = nil
	file_restriction_service_v1_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RestrictionServiceClient is the client API for RestrictionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RestrictionServiceClient interface {
	IsRestricted(ctx context.Context, in *IsRestrictedRequest, opts ...grpc.CallOption) (*IsRestrictedResponse, error)
}

type restrictionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRestrictionServiceClient(cc grpc.ClientConnInterface) RestrictionServiceClient {
	return &restrictionServiceClient{cc}
}

func (c *restrictionServiceClient) IsRestricted(ctx context.Context, in *IsRestrictedRequest, opts ...grpc.CallOption) (*IsRestrictedResponse, error) {
	out := new(IsRestrictedResponse)
	err := c.cc.Invoke(ctx, "/restriction_service.v1.RestrictionService/IsRestricted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RestrictionServiceServer is the server API for RestrictionService service.
type RestrictionServiceServer interface {
	IsRestricted(context.Context, *IsRestrictedRequest) (*IsRestrictedResponse, error)
}

// UnimplementedRestrictionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRestrictionServiceServer struct {
}

func (*UnimplementedRestrictionServiceServer) IsRestricted(context.Context, *IsRestrictedRequest) (*IsRestrictedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsRestricted not implemented")
}

func RegisterRestrictionServiceServer(s *grpc.Server, srv RestrictionServiceServer) {
	s.RegisterService(&_RestrictionService_serviceDesc, srv)
}

func _RestrictionService_IsRestricted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsRestrictedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestrictionServiceServer).IsRestricted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/restriction_service.v1.RestrictionService/IsRestricted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestrictionServiceServer).IsRestricted(ctx, req.(*IsRestrictedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RestrictionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "restriction_service.v1.RestrictionService",
	HandlerType: (*RestrictionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsRestricted",
			Handler:    _RestrictionService_IsRestricted_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "restriction_service/v1/service.proto",
}
